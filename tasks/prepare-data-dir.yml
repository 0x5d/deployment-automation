
- name: prepare single device for data directory
  block:

  - name: create xfs filesystem
    filesystem:
      fstype: xfs
      dev: /dev/nvme0n1

  - name: mount nvme device
    mount:
      path: /mnt/vectorized
      src: /dev/nvme0n1
      fstype: xfs
      state: mounted

  when: not redpanda_with_raid | default(True)


- name: prepare raid for data directory
  block:

  - set_fact:
      device_info: "{{ hostvars[inventory_hostname].ansible_devices }}"
      nvme_device_ids: "{{ hostvars[inventory_hostname].ansible_devices.keys() | map('regex_search', 'nvme.*') | select('string') | list }}"

  - set_fact:
      nvme_devices_for_raid: '{{ (nvme_devices_for_raid | default([])) + ["/dev/" + item] }}'
    loop: '{{ nvme_device_ids }}'
    when: device_info[item]["partitions"] | length == 0

  - name: define mdadm_arrays variable
    set_fact:
      mdadm_arrays:
      - name: md0
        devices: '{{ nvme_devices_for_raid }}'
        filesystem: xfs
        level: 0
        mountpoint: /mnt/vectorized
        state: present

  - name: invoke mdadm role
    include_role:
      name: mrlesmithjr.mdadm

  when: redpanda_with_raid | default(True)

- name: data path
  file:
    path: /mnt/vectorized/redpanda
    state: directory
    owner: root
    group: root
    mode: ugo=rwx

- name: set premissions
  file:
    dest: /var/lib/redpanda
    src: /mnt/vectorized/redpanda
    state: link
    owner: root
    group: root
    mode: ugo=rwx
